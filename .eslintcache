[{"F:\\projects\\react\\trivia\\src\\index.js":"1","F:\\projects\\react\\trivia\\src\\App.js":"2","F:\\projects\\react\\trivia\\src\\reportWebVitals.js":"3","F:\\projects\\react\\trivia\\src\\pages\\Welcome.js":"4","F:\\projects\\react\\trivia\\src\\components\\PlayersSetter.js":"5","F:\\projects\\react\\trivia\\src\\pages\\Game.js":"6","F:\\projects\\react\\trivia\\src\\models\\CategoroiesGetter.js":"7","F:\\projects\\react\\trivia\\src\\components\\CategoryChoose.js":"8","F:\\projects\\react\\trivia\\src\\components\\Question.js":"9","F:\\projects\\react\\trivia\\src\\models\\QuestionGetter.js":"10","F:\\projects\\react\\trivia\\src\\components\\QuestionShow.js":"11","F:\\projects\\react\\trivia\\src\\components\\Answer.js":"12","F:\\projects\\react\\trivia\\src\\components\\Winner.js":"13"},{"size":547,"mtime":1610263468638,"results":"14","hashOfConfig":"15"},{"size":3340,"mtime":1610736713929,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":158,"mtime":1610620488193,"results":"18","hashOfConfig":"15"},{"size":3012,"mtime":1610817845191,"results":"19","hashOfConfig":"15"},{"size":2018,"mtime":1610730210107,"results":"20","hashOfConfig":"15"},{"size":252,"mtime":1610397812710,"results":"21","hashOfConfig":"15"},{"size":674,"mtime":1610630892553,"results":"22","hashOfConfig":"15"},{"size":1682,"mtime":1610736731779,"results":"23","hashOfConfig":"15"},{"size":409,"mtime":1610476813667,"results":"24","hashOfConfig":"15"},{"size":3716,"mtime":1610736761522,"results":"25","hashOfConfig":"15"},{"size":357,"mtime":1610731700882,"results":"26","hashOfConfig":"15"},{"size":871,"mtime":1610725928548,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"7uatvn",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"30"},"F:\\projects\\react\\trivia\\src\\index.js",[],["62","63"],"F:\\projects\\react\\trivia\\src\\App.js",["64","65","66"],"import './App.css';\nimport Welcome from  \"./pages/Welcome\";\nimport PlayersSetter from \"./components/PlayersSetter\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport categoryUtils from \"./models/CategoroiesGetter\";\nimport Game from \"./pages/Game\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react';\nimport Question from './components/Question';\nfunction App(props) {\n  const [players,SetPlayers] =useState([]);\n  const [counter,SetCounter] =useState(1);\n  const [turn,SetTurn]=useState(0); //Turn is the index (starts with 0)\n  const [categories,SetCategories]=useState([]);\n  const [rounds,SetRounds]=useState(0); //0 means game over\n  useEffect(() => {\n    let c =categoryUtils.getCategories().then (response=> { \n      console.log (response);\n      \n      SetCategories(response);\n  }, );\n  },[]);\n  \n  \n \n  let PlayersList = players.map ((item,index) =>\n  {\n      return (<p key={index}> {item.name} (Player {item.number})  has  {item.score} Points</p>);\n  });\n   \n  function setNumberOfRounds(e)\n  {\n    console.log (\"eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee rounds\",e);\n    let roundall=e*counter;\n    console.log (roundall);\n    SetRounds(roundall);\n  }\n\n  function SwitchTurn(e)\n  {\n    console.log (counter);\n    if (turn>=counter-2)  \n    {\n      SetTurn(0);\n      console.log (\"0 tt\");\n    }\n    else\n    {\n      SetTurn( (turn+1));\n      console.log (turn ,\"tt\");\n    }\n\n    if (rounds-1===0 && counter>1) \n    {\n      checkIdenticalPoints();\n    }\n    else \n    {\n      SetRounds(rounds-1);\n    }\n    console.log(\"dkdkdkd\",turn);\n  }\n\n  function checkIdenticalPoints()\n  {\n    console.log (\"draw!!!!\");\n    let arr=[];\n    for (let i=0;i<players.length;++i)\n    {\n      arr[i]=players[i].score; //we want numbers only\n    }\n    console.log (players);\n    console.log (arr);\n    let max=Math.max(...arr)\n    console.log (max);\n    if (countIndex(arr,max) >1)  //We have two or more players with identical points\n    {\n      console.log (\"Another round\");\n      SetRounds(5);\n    }\n    else \n    {\n      SetRounds(0);\n    }\n\n  }\n\n  function countIndex(array, element) \n  {\n    // returns the second index of a symbol in a given text\n    var count = 0;\n    for (let i = 0; i < array.length; ++i) \n    {\n      \n        if (array[i] === element) \n        {\n            ++count;\n        }\n       \n    }   \n    console.log (\"count\",count);\n    return count;\n}    \n\n\n  function reset()\n  {\n    SetPlayers([]);\n    SetCounter(1);\n    SetTurn(0);\n    SetRounds(0);\n    \n  }\n  function check(e)\n  {\n    SetPlayers(players.concat(e));\n    SetCounter(counter+1);\n    console.log (\"players\",players);\n  }\n \n  return (\n    <div className=\"App\">\n      <div className=\"info\">  {PlayersList} </div>\n      <header className=\"App-header\">\n      \n<HashRouter>\n\n<Route exact path=\"/\" >  <PlayersSetter callback={check} RoundsCallback={setNumberOfRounds} players={players} counter={counter} /></Route>\n<Route exact path=\"/game\" >  <Game  players={players} turn={turn} callback={SwitchTurn} reset={reset} categories={categories} rounds={rounds} /></Route>\n<Route exact path=\"/ques\" > <Question players={players} turn={turn} callback={SwitchTurn}  /> </Route>\n</HashRouter>\n\n   \n   <p>{rounds} Rounds Left</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","F:\\projects\\react\\trivia\\src\\reportWebVitals.js",[],"F:\\projects\\react\\trivia\\src\\pages\\Welcome.js",[],"F:\\projects\\react\\trivia\\src\\components\\PlayersSetter.js",["67","68","69","70"],"F:\\projects\\react\\trivia\\src\\pages\\Game.js",["71","72","73","74","75","76","77","78","79"],"import \"./Game.css\";\r\nimport { useEffect } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport CategeryChoose from '../components/CategoryChoose';\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport categoryUtils from \"../models/CategoroiesGetter\";\r\nimport Question from '../components/Question';\r\nimport PlayersSetter from '../components/PlayersSetter';\r\nimport Winner from \"../components/Winner\";\r\nimport  { Redirect } from 'react-router-dom';\r\nfunction Game(props)\r\n{\r\n\r\n    function RandomThree()\r\n    {\r\n        //Difficulty level makes questions impossible to be identical\r\n        let n1=-1,n2=-1,n3=-1;\r\n        n1=Math.floor(Math.random() * 23);\r\n        n2=Math.floor(Math.random() * 23);\r\n        n3=Math.floor(Math.random() * 23);\r\n        return [n1,n2,n3];\r\n    }\r\n\r\n    let CategoriesRandom=props.categories;\r\n    let callback=props.callback;\r\n    console.log (callback);\r\n    let a=RandomThree();\r\n    let turn=props.turn;\r\n    let cat1=CategoriesRandom[a[0]];\r\n    let cat2=CategoriesRandom[a[1]];\r\n    let cat3=CategoriesRandom[a[2]];\r\n    console.log (cat1);\r\n    if (!props.turn) turn=0;\r\n    console.log (props.players,props.turn);\r\n    \r\n    if (props.players[turn]===undefined) \r\n    {\r\n       //alert (\"No players where set!\");\r\n       return (<Redirect to='/' />);\r\n    }\r\n\r\n    //I know that i should not use <br> but using paragraph inside paragraph or div inside div gives me an error\r\n    \r\n    let category1=  <p className=\"choose\">\r\n        { props.players[turn].name+\" (Player\"+Number(turn+1)+\") \" +\"It's your turn:\"}\r\n        <br/>Please Choose a category: </p> \r\n    const Categories=  <CategeryChoose  cat1={cat1}  cat2={cat2}  cat3={cat3}  />\r\n    const winner= <Winner players={props.players} reset={props.reset}/>\r\n    return (<div> \r\n      \r\n        {props.rounds!=0?category1:\"\"}\r\n        {props.rounds!=0?Categories:winner}\r\n        <Button variant=\"warning\" onClick={props.callback} >Switch Turn (dev only)</Button>  </div>)\r\n}\r\nexport default Game;","F:\\projects\\react\\trivia\\src\\models\\CategoroiesGetter.js",["80","81"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nasync function getCategories() {\r\n    const response = await axios.get('https://opentdb.com/api_category.php');\r\n    return response.data.trivia_categories;\r\n}\r\nexport default { getCategories };","F:\\projects\\react\\trivia\\src\\components\\CategoryChoose.js",[],"F:\\projects\\react\\trivia\\src\\components\\Question.js",["82","83","84","85"],"import * as QueryString from \"query-string\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useLocation } from 'react-router-dom';\r\nimport  { Redirect } from 'react-router-dom';\r\nimport React, { useEffect, useState } from 'react';\r\nimport QuestUtils from \"../models/QuestionGetter\";\r\nimport QuestionShow from \"./QuestionShow\";\r\nfunction Question(props)\r\n{\r\n    //https://opentdb.com/api.php?amount=1&category=16&difficulty=medium&type=multiple\r\n    const [ques,SetQues]=useState(null);\r\n    console.log (\"QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ\");\r\n    const location = useLocation();\r\n    console.log(location.search);\r\n    let r=null;\r\n    let difficulty=\"medium\";\r\n    let catNum=location.search.charAt(5)+location.search.charAt(6);\r\n    let points=location.search.charAt(location.search.length-1)*2000;\r\n    if (points===2000) \r\n    {\r\n        difficulty=\"easy\";\r\n    }\r\n    else if (points===4000)\r\n    {\r\n        difficulty=\"medium\";\r\n    }\r\n    else //hard \r\n    {\r\n        difficulty=\"hard\";\r\n    }\r\n    console.log (\"cat\",catNum);\r\n    useEffect(() => {\r\n        r =QuestUtils.QuestionGetter(catNum,difficulty).then (response=> { \r\n            console.log (response.data.results);\r\n            SetQues(response.data.results);\r\n        }, );\r\n    },[]);\r\n    console.log (\"pp\",props.callback);\r\n    const cond=<QuestionShow ques={ques} points={points} turn={props.turn} players={props.players} callback={props.callback}  />;\r\n    return (<div> Question Here: {ques!=null? cond:\"loading\"} \r\n    <a href=\"#/game\"> <Button variant=\"warning\" onClick={props.callback} >Switch Turn (dev only)</Button>  </a>\r\n     </div>);\r\n}\r\nexport default Question;","F:\\projects\\react\\trivia\\src\\models\\QuestionGetter.js",["86","87"],"import React from 'react';\r\nimport axios from 'axios';\r\nasync function QuestionGetter(category,difficulty=\"medium\")\r\n{\r\n    // //https://opentdb.com/api.php?amount=1&category=16&difficulty=medium&type=multiple\r\n    const response = await axios.get('https://opentdb.com/api.php?amount=1&category='+category+'&difficulty='+difficulty+'&type=multiple');\r\n    return response;\r\n}\r\nexport default {QuestionGetter};","F:\\projects\\react\\trivia\\src\\components\\QuestionShow.js",["88","89","90","91","92"],"import { useState } from \"react\";\r\nimport Answer from \"./Answer\";\r\nimport \"./QuestionShow.css\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport React, { useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport  { Redirect } from 'react-router-dom';\r\nfunction QuestionShow(props)\r\n{\r\n    console.log (props.ques);\r\n    let p=props.ques[0];\r\n    let points=props.points;\r\n    let turn =props.turn;\r\n    const [showAnswer,SetShowAnswer]=useState(false); //Don't show the answer until the player answered\r\n    const [answersState,SetAnswerState]=useState([]);\r\n    const [AnswerIndex,SetAnswerIndex]=useState(-1);\r\n    const [res,SetRes]=useState(\"\");\r\n    console.log(p.question);\r\n    function getRandomInt(max) \r\n    {\r\n        return Math.floor(Math.random() * Math.floor(max));\r\n    }\r\n    let correctIndex;\r\n\r\n    let answers=[];\r\n    \r\n    useEffect(() => {\r\n       \r\n        correctIndex=getRandomInt(4);\r\n        answers=[];\r\n        answers[correctIndex]=p.correct_answer+\"--- Cheat --- this is  the correct answer\";\r\n    let j=0;\r\n    for (let i=0;i<4;++i)\r\n    {\r\n        if (i!=correctIndex) \r\n        {\r\n            answers[i]=p.incorrect_answers[j];\r\n            ++j\r\n        }\r\n        \r\n    }\r\n    SetAnswerState(answers);\r\n    SetAnswerIndex(correctIndex);\r\n      },[]);\r\n\r\n  \r\n    function answer(e)\r\n    {\r\n        console.log (e);\r\n        console.log (\"target\",e,\"correctindex\",AnswerIndex);\r\n        if (showAnswer) \r\n        {\r\n            return;\r\n        }\r\n        if ((Number(e-1))===AnswerIndex)\r\n        {\r\n            SetRes(\"You got it right! and you get \"+ points+\" points!\");\r\n            props.players[turn].score+=points;\r\n        }\r\n        else \r\n        {\r\n            SetRes(\"You were wrong! and you will lose \"+ points+\" points!\");\r\n            props.players[turn].score-=points;\r\n        }\r\n        SetShowAnswer(true);\r\n      \r\n    }\r\n   \r\n    //No spaces between <span> and </span>\r\n    console.log (\"props\",p);\r\n    const AnswerComponent=<div><Answer currentAnswerText={p.correct_answer} currentAnswerIndex={AnswerIndex}  res={res} /> </div>\r\n    const ContinueButton= <div> <a href=\"#/game\"> <Button variant=\"success\" onClick={props.callback} >Conitune Playing!</Button>  </a></div> \r\n    const AnswerRequest = <p> {props.players[turn].name} (Player {Number(turn+1)}) answer the question</p>\r\n    const QuestinoShower = <div className=\"question\">\r\n    <p>   <span dangerouslySetInnerHTML={{__html:p.question}}></span>   </p>\r\n       Answers:  \r\n       <p>\r\n           <Button className=\"my-btn\" variant=\"primary\" value=\"1\" onClick={() => answer(1)}>1.\r\n           <span dangerouslySetInnerHTML={{__html:answersState[0]}}></span>  \r\n           </Button> \r\n           \r\n       </p>\r\n       <p>\r\n           <Button className=\"my-btn\" variant=\"primary\" value=\"2\" onClick={() => answer(2)}>2.\r\n           <span dangerouslySetInnerHTML={{__html:answersState[1]}}></span> \r\n           </Button>\r\n          \r\n       </p> \r\n       <p>\r\n           <Button  className=\"my-btn\" variant=\"primary\" value=\"3\" onClick={() => answer(3)}>3.\r\n           <span dangerouslySetInnerHTML={{__html:answersState[2]}}></span> \r\n           </Button>\r\n          \r\n       </p>\r\n       <p>\r\n           <Button className=\"my-btn\" variant=\"primary\" value=\"4\" onClick={() => answer(4)}>4.\r\n           <span dangerouslySetInnerHTML={{__html:answersState[3]}}></span> \r\n           </Button>\r\n          \r\n       </p> </div>\r\n\r\n  return (<div>  <p>\"TODO\" </p> \r\n        {!showAnswer ?  AnswerRequest: \"\"}\r\n        {!showAnswer ?  QuestinoShower: \"\"}\r\n        {showAnswer ?  AnswerComponent :\"\"} \r\n        {showAnswer ?  ContinueButton :\"\" }\r\n    </div>)\r\n}\r\nexport default QuestionShow;","F:\\projects\\react\\trivia\\src\\components\\Answer.js",[],"F:\\projects\\react\\trivia\\src\\components\\Winner.js",["93","94"],"import Button from 'react-bootstrap/Button';\r\nimport  { Redirect,Link } from 'react-router-dom';\r\nfunction Winner(props)\r\n{\r\n    let arr=[];\r\n    let p=props.players;\r\n    console.log (p);\r\n    \r\n    for (let i=0;i<p.length;++i)\r\n    {\r\n        arr[i]=p[i].score; //Only numbers we want\r\n    }\r\n\r\n    let max=Math.max(...arr)\r\n    console.log (max);\r\n    let index=arr.indexOf(max);\r\n    console.log (index);\r\n    let w=p[index];\r\n    console.log (w);\r\n    function Another()\r\n    {\r\n        props.reset();\r\n    }\r\n    \r\n    return (<div><p>Winner Screen!</p>\r\n            <p>Congratulations {w.name}</p>\r\n            <p>{w.name} (Player {Number(index+1)}) You win the Game!  </p>\r\n            <p>With {w.score} points!</p>\r\n            <Link to=\"/\" onClick={Another} className=\"btn btn-primary\">Let's Play another Game</Link>\r\n\r\n\r\n    </div>);\r\n}\r\nexport default Winner;",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":15},{"ruleId":"99","severity":1,"message":"103","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":13},{"ruleId":"99","severity":1,"message":"104","line":18,"column":9,"nodeType":"101","messageId":"102","endLine":18,"endColumn":10},{"ruleId":"99","severity":1,"message":"105","line":3,"column":17,"nodeType":"101","messageId":"102","endLine":3,"endColumn":26},{"ruleId":"99","severity":1,"message":"106","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":12},{"ruleId":"99","severity":1,"message":"107","line":9,"column":9,"nodeType":"101","messageId":"102","endLine":9,"endColumn":10},{"ruleId":"99","severity":1,"message":"108","line":10,"column":9,"nodeType":"101","messageId":"102","endLine":10,"endColumn":14},{"ruleId":"99","severity":1,"message":"105","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":19},{"ruleId":"99","severity":1,"message":"109","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":20},{"ruleId":"99","severity":1,"message":"110","line":5,"column":22,"nodeType":"101","messageId":"102","endLine":5,"endColumn":27},{"ruleId":"99","severity":1,"message":"111","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":21},{"ruleId":"99","severity":1,"message":"112","line":7,"column":8,"nodeType":"101","messageId":"102","endLine":7,"endColumn":16},{"ruleId":"99","severity":1,"message":"113","line":8,"column":8,"nodeType":"101","messageId":"102","endLine":8,"endColumn":21},{"ruleId":"114","severity":1,"message":"115","line":45,"column":67,"nodeType":"116","messageId":"117","endLine":45,"endColumn":68},{"ruleId":"118","severity":1,"message":"119","line":51,"column":22,"nodeType":"116","messageId":"120","endLine":51,"endColumn":24},{"ruleId":"118","severity":1,"message":"119","line":52,"column":22,"nodeType":"116","messageId":"120","endLine":52,"endColumn":24},{"ruleId":"99","severity":1,"message":"121","line":1,"column":8,"nodeType":"101","messageId":"102","endLine":1,"endColumn":13},{"ruleId":"122","severity":1,"message":"123","line":8,"column":1,"nodeType":"124","endLine":8,"endColumn":34},{"ruleId":"99","severity":1,"message":"125","line":1,"column":13,"nodeType":"101","messageId":"102","endLine":1,"endColumn":24},{"ruleId":"99","severity":1,"message":"126","line":4,"column":11,"nodeType":"101","messageId":"102","endLine":4,"endColumn":19},{"ruleId":"99","severity":1,"message":"127","line":33,"column":9,"nodeType":"101","messageId":"102","endLine":33,"endColumn":10},{"ruleId":"128","severity":1,"message":"129","line":33,"column":12,"nodeType":"130","endLine":36,"endColumn":13},{"ruleId":"99","severity":1,"message":"121","line":1,"column":8,"nodeType":"101","messageId":"102","endLine":1,"endColumn":13},{"ruleId":"122","severity":1,"message":"123","line":9,"column":1,"nodeType":"124","endLine":9,"endColumn":33},{"ruleId":"99","severity":1,"message":"106","line":6,"column":10,"nodeType":"101","messageId":"102","endLine":6,"endColumn":14},{"ruleId":"99","severity":1,"message":"126","line":7,"column":11,"nodeType":"101","messageId":"102","endLine":7,"endColumn":19},{"ruleId":"128","severity":1,"message":"131","line":29,"column":22,"nodeType":"130","endLine":29,"endColumn":37},{"ruleId":"128","severity":1,"message":"132","line":30,"column":17,"nodeType":"133","endLine":30,"endColumn":19},{"ruleId":"118","severity":1,"message":"119","line":35,"column":14,"nodeType":"116","messageId":"120","endLine":35,"endColumn":16},{"ruleId":"99","severity":1,"message":"134","line":1,"column":8,"nodeType":"101","messageId":"102","endLine":1,"endColumn":14},{"ruleId":"99","severity":1,"message":"126","line":2,"column":11,"nodeType":"101","messageId":"102","endLine":2,"endColumn":19},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'Welcome' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'c' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'i' is assigned a value but never used.","'items' is assigned a value but never used.","'HashRouter' is defined but never used.","'Route' is defined but never used.","'categoryUtils' is defined but never used.","'Question' is defined but never used.","'PlayersSetter' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","'React' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'QueryString' is defined but never used.","'Redirect' is defined but never used.","'r' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'r' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'correctIndex' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'answers' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ArrayExpression","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]