[{"F:\\projects\\react\\trivia\\src\\index.js":"1","F:\\projects\\react\\trivia\\src\\App.js":"2","F:\\projects\\react\\trivia\\src\\reportWebVitals.js":"3","F:\\projects\\react\\trivia\\src\\pages\\Welcome.js":"4","F:\\projects\\react\\trivia\\src\\components\\PlayersSetter.js":"5","F:\\projects\\react\\trivia\\src\\pages\\Game.js":"6","F:\\projects\\react\\trivia\\src\\models\\CategoroiesGetter.js":"7","F:\\projects\\react\\trivia\\src\\components\\CategoryChoose.js":"8","F:\\projects\\react\\trivia\\src\\components\\Question.js":"9","F:\\projects\\react\\trivia\\src\\models\\QuestionGetter.js":"10","F:\\projects\\react\\trivia\\src\\components\\QuestionShow.js":"11","F:\\projects\\react\\trivia\\src\\components\\Answer.js":"12","F:\\projects\\react\\trivia\\src\\components\\Winner.js":"13"},{"size":547,"mtime":1610263468638,"results":"14","hashOfConfig":"15"},{"size":3305,"mtime":1610623446073,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":158,"mtime":1610620488193,"results":"18","hashOfConfig":"15"},{"size":2688,"mtime":1610622877369,"results":"19","hashOfConfig":"15"},{"size":1748,"mtime":1610614676993,"results":"20","hashOfConfig":"15"},{"size":252,"mtime":1610397812710,"results":"21","hashOfConfig":"15"},{"size":619,"mtime":1610614577896,"results":"22","hashOfConfig":"15"},{"size":1633,"mtime":1610539798013,"results":"23","hashOfConfig":"15"},{"size":409,"mtime":1610476813667,"results":"24","hashOfConfig":"15"},{"size":3244,"mtime":1610617056371,"results":"25","hashOfConfig":"15"},{"size":281,"mtime":1610538676211,"results":"26","hashOfConfig":"15"},{"size":871,"mtime":1610612025059,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"7uatvn",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"F:\\projects\\react\\trivia\\src\\index.js",[],["59","60"],"F:\\projects\\react\\trivia\\src\\App.js",["61","62","63"],"F:\\projects\\react\\trivia\\src\\reportWebVitals.js",[],"F:\\projects\\react\\trivia\\src\\pages\\Welcome.js",[],"F:\\projects\\react\\trivia\\src\\components\\PlayersSetter.js",["64","65","66","67"],"F:\\projects\\react\\trivia\\src\\pages\\Game.js",["68","69","70","71","72","73","74"],"F:\\projects\\react\\trivia\\src\\models\\CategoroiesGetter.js",["75","76"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nasync function getCategories() {\r\n    const response = await axios.get('https://opentdb.com/api_category.php');\r\n    return response.data.trivia_categories;\r\n}\r\nexport default { getCategories };","F:\\projects\\react\\trivia\\src\\components\\CategoryChoose.js",[],"F:\\projects\\react\\trivia\\src\\components\\Question.js",["77","78","79"],"import * as QueryString from \"query-string\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useLocation } from 'react-router-dom';\r\nimport React, { useEffect, useState } from 'react';\r\nimport QuestUtils from \"../models/QuestionGetter\";\r\nimport QuestionShow from \"./QuestionShow\";\r\nfunction Question(props)\r\n{\r\n    //https://opentdb.com/api.php?amount=1&category=16&difficulty=medium&type=multiple\r\n    const [ques,SetQues]=useState(null);\r\n    console.log (\"QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ\");\r\n    const location = useLocation();\r\n    console.log(location.search);\r\n    let r=null;\r\n    let difficulty=\"medium\";\r\n    let catNum=location.search.charAt(5)+location.search.charAt(6);\r\n    let points=location.search.charAt(location.search.length-1)*2000;\r\n    if (points===2000) \r\n    {\r\n        difficulty=\"easy\";\r\n    }\r\n    else if (points===4000)\r\n    {\r\n        difficulty=\"medium\";\r\n    }\r\n    else //hard \r\n    {\r\n        difficulty=\"hard\";\r\n    }\r\n    console.log (\"cat\",catNum);\r\n    useEffect(() => {\r\n        r =QuestUtils.QuestionGetter(catNum,difficulty).then (response=> { \r\n            console.log (response.data.results);\r\n            SetQues(response.data.results);\r\n        }, );\r\n    },[]);\r\n    console.log (\"pp\",props.callback);\r\n    const cond=<QuestionShow ques={ques} points={points} turn={props.turn} players={props.players} callback={props.callback}/>;\r\n    return (<div> Question Here: {ques!=null? cond:\"loading\"} \r\n    <a href=\"#/game\"> <Button variant=\"warning\" onClick={props.callback} >Switch Turn (dev only)</Button>  </a>\r\n     </div>);\r\n}\r\nexport default Question;","F:\\projects\\react\\trivia\\src\\models\\QuestionGetter.js",["80","81"],"import React from 'react';\r\nimport axios from 'axios';\r\nasync function QuestionGetter(category,difficulty=\"medium\")\r\n{\r\n    // //https://opentdb.com/api.php?amount=1&category=16&difficulty=medium&type=multiple\r\n    const response = await axios.get('https://opentdb.com/api.php?amount=1&category='+category+'&difficulty='+difficulty+'&type=multiple');\r\n    return response;\r\n}\r\nexport default {QuestionGetter};","F:\\projects\\react\\trivia\\src\\components\\QuestionShow.js",["82","83","84"],"F:\\projects\\react\\trivia\\src\\components\\Answer.js",[],"F:\\projects\\react\\trivia\\src\\components\\Winner.js",["85","86"],"import Button from 'react-bootstrap/Button';\r\nimport  { Redirect,Link } from 'react-router-dom';\r\nfunction Winner(props)\r\n{\r\n    let arr=[];\r\n    let p=props.players;\r\n    console.log (p);\r\n    \r\n    for (let i=0;i<p.length;++i)\r\n    {\r\n        arr[i]=p[i].score; //Only numbers we want\r\n    }\r\n\r\n    let max=Math.max(...arr)\r\n    console.log (max);\r\n    let index=arr.indexOf(max);\r\n    console.log (index);\r\n    let w=p[index];\r\n    console.log (w);\r\n    function Another()\r\n    {\r\n        props.reset();\r\n    }\r\n    \r\n    return (<div><p>Winner Screen!</p>\r\n            <p>Congratulations {w.name}</p>\r\n            <p>{w.name} (Player {Number(index+1)}) You win the Game!  </p>\r\n            <p>With {w.score} points!</p>\r\n            <Link to=\"/\" onClick={Another} className=\"btn btn-primary\">Let's Play another Game</Link>\r\n\r\n\r\n    </div>);\r\n}\r\nexport default Winner;",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":15},{"ruleId":"91","severity":1,"message":"95","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":13},{"ruleId":"91","severity":1,"message":"96","line":18,"column":9,"nodeType":"93","messageId":"94","endLine":18,"endColumn":10},{"ruleId":"91","severity":1,"message":"97","line":3,"column":17,"nodeType":"93","messageId":"94","endLine":3,"endColumn":26},{"ruleId":"91","severity":1,"message":"98","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":12},{"ruleId":"91","severity":1,"message":"99","line":9,"column":9,"nodeType":"93","messageId":"94","endLine":9,"endColumn":10},{"ruleId":"91","severity":1,"message":"100","line":10,"column":9,"nodeType":"93","messageId":"94","endLine":10,"endColumn":14},{"ruleId":"91","severity":1,"message":"97","line":1,"column":10,"nodeType":"93","messageId":"94","endLine":1,"endColumn":19},{"ruleId":"91","severity":1,"message":"101","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":20},{"ruleId":"91","severity":1,"message":"102","line":4,"column":22,"nodeType":"93","messageId":"94","endLine":4,"endColumn":27},{"ruleId":"91","severity":1,"message":"103","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":21},{"ruleId":"91","severity":1,"message":"104","line":6,"column":8,"nodeType":"93","messageId":"94","endLine":6,"endColumn":16},{"ruleId":"91","severity":1,"message":"105","line":7,"column":8,"nodeType":"93","messageId":"94","endLine":7,"endColumn":21},{"ruleId":"106","severity":1,"message":"107","line":46,"column":26,"nodeType":"108","messageId":"109","endLine":46,"endColumn":28},{"ruleId":"91","severity":1,"message":"110","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":8,"column":1,"nodeType":"113","endLine":8,"endColumn":34},{"ruleId":"91","severity":1,"message":"114","line":1,"column":13,"nodeType":"93","messageId":"94","endLine":1,"endColumn":24},{"ruleId":"91","severity":1,"message":"115","line":32,"column":9,"nodeType":"93","messageId":"94","endLine":32,"endColumn":10},{"ruleId":"116","severity":1,"message":"117","line":32,"column":12,"nodeType":"118","endLine":35,"endColumn":13},{"ruleId":"91","severity":1,"message":"110","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":9,"column":1,"nodeType":"113","endLine":9,"endColumn":33},{"ruleId":"116","severity":1,"message":"119","line":26,"column":22,"nodeType":"118","endLine":26,"endColumn":37},{"ruleId":"116","severity":1,"message":"120","line":27,"column":17,"nodeType":"121","endLine":27,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":32,"column":14,"nodeType":"108","messageId":"109","endLine":32,"endColumn":16},{"ruleId":"91","severity":1,"message":"122","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":14},{"ruleId":"91","severity":1,"message":"123","line":2,"column":11,"nodeType":"93","messageId":"94","endLine":2,"endColumn":19},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'Welcome' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'c' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'i' is assigned a value but never used.","'items' is assigned a value but never used.","'HashRouter' is defined but never used.","'Route' is defined but never used.","'categoryUtils' is defined but never used.","'Question' is defined but never used.","'PlayersSetter' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'React' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'QueryString' is defined but never used.","'r' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'r' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'correctIndex' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'answers' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ArrayExpression","'Button' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]