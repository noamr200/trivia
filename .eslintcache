[{"F:\\projects\\react\\trivia\\src\\index.js":"1","F:\\projects\\react\\trivia\\src\\App.js":"2","F:\\projects\\react\\trivia\\src\\reportWebVitals.js":"3","F:\\projects\\react\\trivia\\src\\pages\\Welcome.js":"4","F:\\projects\\react\\trivia\\src\\components\\PlayersSetter.js":"5","F:\\projects\\react\\trivia\\src\\pages\\Game.js":"6","F:\\projects\\react\\trivia\\src\\models\\CategoroiesGetter.js":"7","F:\\projects\\react\\trivia\\src\\components\\CategoryChoose.js":"8","F:\\projects\\react\\trivia\\src\\components\\Question.js":"9","F:\\projects\\react\\trivia\\src\\models\\QuestionGetter.js":"10","F:\\projects\\react\\trivia\\src\\components\\QuestionShow.js":"11","F:\\projects\\react\\trivia\\src\\components\\Answer.js":"12","F:\\projects\\react\\trivia\\src\\components\\Winner.js":"13"},{"size":547,"mtime":1610263468638,"results":"14","hashOfConfig":"15"},{"size":2265,"mtime":1610548230371,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":113,"mtime":1610285084570,"results":"18","hashOfConfig":"15"},{"size":2026,"mtime":1610546985330,"results":"19","hashOfConfig":"15"},{"size":1694,"mtime":1610547862498,"results":"20","hashOfConfig":"15"},{"size":252,"mtime":1610397812710,"results":"21","hashOfConfig":"15"},{"size":619,"mtime":1610541375744,"results":"22","hashOfConfig":"15"},{"size":1633,"mtime":1610539798013,"results":"23","hashOfConfig":"15"},{"size":409,"mtime":1610476813667,"results":"24","hashOfConfig":"15"},{"size":2873,"mtime":1610544154415,"results":"25","hashOfConfig":"15"},{"size":281,"mtime":1610538676211,"results":"26","hashOfConfig":"15"},{"size":106,"mtime":1610547710342,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"7uatvn",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\projects\\react\\trivia\\src\\index.js",[],["59","60"],"F:\\projects\\react\\trivia\\src\\App.js",["61","62","63"],"F:\\projects\\react\\trivia\\src\\reportWebVitals.js",[],"F:\\projects\\react\\trivia\\src\\pages\\Welcome.js",[],"F:\\projects\\react\\trivia\\src\\components\\PlayersSetter.js",["64","65","66","67"],"F:\\projects\\react\\trivia\\src\\pages\\Game.js",["68","69","70","71","72","73","74"],"F:\\projects\\react\\trivia\\src\\models\\CategoroiesGetter.js",["75","76"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nasync function getCategories() {\r\n    const response = await axios.get('https://opentdb.com/api_category.php');\r\n    return response.data.trivia_categories;\r\n}\r\nexport default { getCategories };","F:\\projects\\react\\trivia\\src\\components\\CategoryChoose.js",[],"F:\\projects\\react\\trivia\\src\\components\\Question.js",["77","78","79"],"import * as QueryString from \"query-string\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useLocation } from 'react-router-dom';\r\nimport React, { useEffect, useState } from 'react';\r\nimport QuestUtils from \"../models/QuestionGetter\";\r\nimport QuestionShow from \"./QuestionShow\";\r\nfunction Question(props)\r\n{\r\n    //https://opentdb.com/api.php?amount=1&category=16&difficulty=medium&type=multiple\r\n    const [ques,SetQues]=useState(null);\r\n    console.log (\"QQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ\");\r\n    const location = useLocation();\r\n    console.log(location.search);\r\n    let r=null;\r\n    let difficulty=\"medium\";\r\n    let catNum=location.search.charAt(5)+location.search.charAt(6);\r\n    let points=location.search.charAt(location.search.length-1)*2000;\r\n    if (points===2000) \r\n    {\r\n        difficulty=\"easy\";\r\n    }\r\n    else if (points===4000)\r\n    {\r\n        difficulty=\"medium\";\r\n    }\r\n    else //hard \r\n    {\r\n        difficulty=\"hard\";\r\n    }\r\n    console.log (\"cat\",catNum);\r\n    useEffect(() => {\r\n        r =QuestUtils.QuestionGetter(catNum,difficulty).then (response=> { \r\n            console.log (response.data.results);\r\n            SetQues(response.data.results);\r\n        }, );\r\n    },[]);\r\n    console.log (\"pp\",props.callback);\r\n    const cond=<QuestionShow ques={ques} points={points} turn={props.turn} players={props.players} callback={props.callback}/>;\r\n    return (<div> Question Here: {ques!=null? cond:\"loading\"} \r\n    <a href=\"#/game\"> <Button variant=\"warning\" onClick={props.callback} >Switch Turn (dev only)</Button>  </a>\r\n     </div>);\r\n}\r\nexport default Question;","F:\\projects\\react\\trivia\\src\\models\\QuestionGetter.js",["80","81"],"import React from 'react';\r\nimport axios from 'axios';\r\nasync function QuestionGetter(category,difficulty=\"medium\")\r\n{\r\n    // //https://opentdb.com/api.php?amount=1&category=16&difficulty=medium&type=multiple\r\n    const response = await axios.get('https://opentdb.com/api.php?amount=1&category='+category+'&difficulty='+difficulty+'&type=multiple');\r\n    return response;\r\n}\r\nexport default {QuestionGetter};","F:\\projects\\react\\trivia\\src\\components\\QuestionShow.js",["82","83","84"],"import { useState } from \"react\";\r\nimport Answer from \"./Answer\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport React, { useEffect } from 'react';\r\nfunction QuestionShow(props)\r\n{\r\n    console.log (props.ques);\r\n    let p=props.ques[0];\r\n    let points=props.points;\r\n    let turn =props.turn;\r\n    const [showAnswer,SetShowAnswer]=useState(false); //Don't show the answer until the player answered\r\n    const [answersState,SetAnswerState]=useState([]);\r\n    const [AnswerIndex,SetAnswerIndex]=useState(-1);\r\n    const [res,SetRes]=useState(\"\");\r\n    console.log(p.question);\r\n    function getRandomInt(max) \r\n    {\r\n        return Math.floor(Math.random() * Math.floor(max));\r\n    }\r\n    let correctIndex;\r\n\r\n    let answers=[];\r\n    \r\n    useEffect(() => {\r\n       \r\n        correctIndex=getRandomInt(4);\r\n        answers=[];\r\n        answers[correctIndex]=p.correct_answer+\"--- Cheat --- this is  the correct answer\";\r\n    let j=0;\r\n    for (let i=0;i<4;++i)\r\n    {\r\n        if (i!=correctIndex) \r\n        {\r\n            answers[i]=p.incorrect_answers[j];\r\n            ++j\r\n        }\r\n        \r\n    }\r\n    SetAnswerState(answers);\r\n    SetAnswerIndex(correctIndex);\r\n      },[]);\r\n\r\n  \r\n    function answer(e)\r\n    {\r\n        console.log (e);\r\n        console.log (\"target\",e.target.value,\"correctindex\",AnswerIndex);\r\n        if (showAnswer) \r\n        {\r\n            return;\r\n        }\r\n        if ((Number(e.target.value-1))===AnswerIndex)\r\n        {\r\n            SetRes(\"You got it right! and you get \"+ points+\" points!\");\r\n            props.players[turn].score+=points;\r\n        }\r\n        else \r\n        {\r\n            SetRes(\"You were wrong! and you will lose \"+ points+\" points!\");\r\n            props.players[turn].score-=points;\r\n        }\r\n        SetShowAnswer(true);\r\n        \r\n    }\r\n    \r\n    console.log (\"props\",p);\r\n    const AnswerComponent=<div><Answer currentAnswerText={p.correct_answer} currentAnswerIndex={AnswerIndex}  res={res} /> </div>\r\n    const ContinueButton= <div> <a href=\"#/game\"> <Button variant=\"success\" onClick={props.callback} >Conitune Playing!</Button>  </a></div> \r\n   return (<div>  <p>\"TODO\" </p> <p> {props.players[turn].name} (Player {Number(turn+1)}) answer the question</p>\r\n     <p>  Question:<span dangerouslySetInnerHTML={{__html: p.question}}></span>  </p>\r\n        Answers:  \r\n        <p><Button variant=\"primary\" value=\"1\" onClick={answer}>1.</Button>{answersState[0]} </p>\r\n        <p><Button variant=\"primary\" value=\"2\" onClick={answer}>2.</Button>{answersState[1]} </p> \r\n        <p><Button variant=\"primary\" value=\"3\" onClick={answer}>3.</Button>{answersState[2]} </p>\r\n        <p><Button variant=\"primary\" value=\"4\" onClick={answer}>4.</Button>{answersState[3]} </p>\r\n        {showAnswer ?  AnswerComponent :\"\"} \r\n        { showAnswer ?  ContinueButton :\"\" }\r\n    </div>)\r\n}\r\nexport default QuestionShow;","F:\\projects\\react\\trivia\\src\\components\\Answer.js",[],"F:\\projects\\react\\trivia\\src\\components\\Winner.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":15},{"ruleId":"89","severity":1,"message":"93","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":13},{"ruleId":"89","severity":1,"message":"94","line":18,"column":9,"nodeType":"91","messageId":"92","endLine":18,"endColumn":10},{"ruleId":"89","severity":1,"message":"95","line":3,"column":17,"nodeType":"91","messageId":"92","endLine":3,"endColumn":26},{"ruleId":"89","severity":1,"message":"96","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":12},{"ruleId":"89","severity":1,"message":"97","line":7,"column":9,"nodeType":"91","messageId":"92","endLine":7,"endColumn":10},{"ruleId":"89","severity":1,"message":"98","line":8,"column":9,"nodeType":"91","messageId":"92","endLine":8,"endColumn":14},{"ruleId":"89","severity":1,"message":"95","line":1,"column":10,"nodeType":"91","messageId":"92","endLine":1,"endColumn":19},{"ruleId":"89","severity":1,"message":"99","line":4,"column":10,"nodeType":"91","messageId":"92","endLine":4,"endColumn":20},{"ruleId":"89","severity":1,"message":"100","line":4,"column":22,"nodeType":"91","messageId":"92","endLine":4,"endColumn":27},{"ruleId":"89","severity":1,"message":"101","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":21},{"ruleId":"89","severity":1,"message":"102","line":6,"column":8,"nodeType":"91","messageId":"92","endLine":6,"endColumn":16},{"ruleId":"89","severity":1,"message":"103","line":7,"column":8,"nodeType":"91","messageId":"92","endLine":7,"endColumn":21},{"ruleId":"104","severity":1,"message":"105","line":46,"column":26,"nodeType":"106","messageId":"107","endLine":46,"endColumn":28},{"ruleId":"89","severity":1,"message":"108","line":1,"column":8,"nodeType":"91","messageId":"92","endLine":1,"endColumn":13},{"ruleId":"109","severity":1,"message":"110","line":8,"column":1,"nodeType":"111","endLine":8,"endColumn":34},{"ruleId":"89","severity":1,"message":"112","line":1,"column":13,"nodeType":"91","messageId":"92","endLine":1,"endColumn":24},{"ruleId":"89","severity":1,"message":"113","line":32,"column":9,"nodeType":"91","messageId":"92","endLine":32,"endColumn":10},{"ruleId":"114","severity":1,"message":"115","line":32,"column":12,"nodeType":"116","endLine":35,"endColumn":13},{"ruleId":"89","severity":1,"message":"108","line":1,"column":8,"nodeType":"91","messageId":"92","endLine":1,"endColumn":13},{"ruleId":"109","severity":1,"message":"110","line":9,"column":1,"nodeType":"111","endLine":9,"endColumn":33},{"ruleId":"114","severity":1,"message":"117","line":26,"column":22,"nodeType":"116","endLine":26,"endColumn":37},{"ruleId":"114","severity":1,"message":"118","line":27,"column":17,"nodeType":"119","endLine":27,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":32,"column":14,"nodeType":"106","messageId":"107","endLine":32,"endColumn":16},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'Welcome' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'c' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'i' is assigned a value but never used.","'items' is assigned a value but never used.","'HashRouter' is defined but never used.","'Route' is defined but never used.","'categoryUtils' is defined but never used.","'Question' is defined but never used.","'PlayersSetter' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'React' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'QueryString' is defined but never used.","'r' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'r' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'correctIndex' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'answers' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ArrayExpression","no-global-assign","no-unsafe-negation"]