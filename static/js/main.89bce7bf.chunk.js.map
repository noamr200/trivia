{"version":3,"sources":["pages/Welcome.js","components/PlayersSetter.js","models/CategoroiesGetter.js","components/CategoryChoose.js","components/Winner.js","pages/Game.js","models/QuestionGetter.js","components/Answer.js","components/QuestionShow.js","components/Question.js","App.js","reportWebVitals.js","index.js"],"names":["Welcome","className","PlayersSetter","props","n","counter","React","useState","name","setName","rounds","setRounds","StartButton","href","Button","variant","size","defaultValue","onChange","e","target","value","type","placeholder","onClick","obj","number","score","length","undefined","alert","console","log","process","Audio","play","callback","RoundsCallback","setTheRounds","a","axios","get","response","data","trivia_categories","getCategories","CategeryChoose","cat1","cat2","cat3","id1","Number","id","id2","id3","Winner","arr","p","players","i","max","Math","index","indexOf","w","useEffect","src","alt","to","reset","Game","CategoriesRandom","categories","floor","random","turn","category1","Categories","winner","category","difficulty","QuestionGetter","Answer","right","text","currentAnswerText","currentAnswerIndex","res","includes","answer","dangerouslySetInnerHTML","__html","Right","Wrong","QuestionShow","ques","points","showAnswer","SetShowAnswer","answersState","SetAnswerState","AnswerIndex","SetAnswerIndex","SetRes","correctIndex","answers","correct_answer","j","incorrect_answers","AnswerComponent","ContinueButton","AnswerRequest","QuestinoShower","question","Question","SetQues","location","useLocation","catNum","search","charAt","then","results","wait","role","cond","App","SetPlayers","SetCounter","SetTurn","SetCategories","SetRounds","PlayersList","map","item","SwitchTurn","array","element","count","countIndex","checkIdenticalPoints","exact","path","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89bce7bf.chunk.js","sourcesContent":["import \"./Welcome.css\";\r\n\r\nfunction Welcome()\r\n{\r\n    return (<div> <h1 className=\"title\">Welcome to our trivia game!</h1></div>);\r\n}\r\nexport default Welcome;","import Button from 'react-bootstrap/Button';\r\nimport Welcome from  \"../pages/Welcome\";\r\nimport React from 'react';\r\nimport \"./PlayersSetter.css\"\r\nfunction PlayersSetter(props)\r\n{\r\n    const DEFAULT_ROUNDS_NUMBER=30;\r\n    let n=props.counter;\r\n    const [name,setName] = React.useState('');\r\n    const [rounds,setRounds]=React.useState(DEFAULT_ROUNDS_NUMBER);\r\n    \r\n   \r\n        const add = (e) =>\r\n        {\r\n            let obj = {name :name ,number:n ,score:0};\r\n            if (obj.name.length<=0 || obj.name===undefined) \r\n            {\r\n                alert (\"You must give a name to the player before adding!\");\r\n                return;\r\n            }\r\n            console.log(process.env);\r\n            \r\n                //${process.env.PUBLIC_URL}\r\n            var audio = new Audio(\"https://github.com/noamr200/trivia/raw/main/public/mp3/add.mp3\");\r\n            audio.play();\r\n            props.callback(obj)\r\n            setTheRounds(rounds);\r\n        }\r\n\r\n        function setTheRounds(e) \r\n        {\r\n            setRounds(e);\r\n            props.RoundsCallback(rounds);\r\n        }\r\n        /*\r\n        var audio = new Audio('audio_file.mp3');\r\n        audio.play();*/\r\n\r\n        /*\r\n        const NumberSelection=(  <div> <select> onChange={setTheRounds}\r\n        <option value=\"10\">10 Questions</option>\r\n        <option value=\"20\" selected>20 Questions</option>\r\n        <option value=\"30\">30 Questions</option>\r\n        <option value=\"40\">40 Questions</option>\r\n    </select> </div>);\r\n   */\r\n  const StartButton=<p className=\"startButton\"> <a href=\"#/Game\" ><Button variant=\"success\" className=\"start-btn\" size=\"lg\" >Start playing The Game!</Button> </a></p>;\r\n    return (<div>\r\n        <Welcome/>\r\n        <div className=\"question_select\">\r\n        <p>Please Choose number of Questions per player:</p>\r\n        <select className=\"select-css\" defaultValue={DEFAULT_ROUNDS_NUMBER} onChange={e => setRounds(e.target.value)}>\r\n                        <option value=\"2\">2   Questions I want the game to be really short</option>\r\n                        <option value=\"10\">10 Questions I want the game to be short!</option>\r\n                        <option value=\"20\">20 Questions I want the game to be short but not too much</option>\r\n                        <option value=\"30\">30 Questions I want A moderate length</option>\r\n                        <option value=\"40\">40 Questions I want The game to be long but not too long</option>\r\n                        <option value=\"50\">50 Questions Let's sit  down for ages </option>\r\n                    </select>\r\n        </div>\r\n\r\n        <form className=\"new_player_form\">\r\n           \r\n            <p className=\"please\" ><b>Please Enter your name player {n} </b></p>\r\n            <b>Your Name:  </b><input type=\"text\" placeholder=\"Enter your name\" onChange={e => setName(e.target.value)}  /><br/>\r\n            <p></p>  \r\n\r\n            <Button variant=\"primary\" onClick={add}>{n>=2?\"Add Another Player\": \"Add player\"}</Button>\r\n            <p></p>  \r\n            {n>=2? StartButton :\"\"}\r\n           \r\n        </form>\r\n    </div>);\r\n}\r\nexport default PlayersSetter;","import axios from 'axios';\r\n\r\nasync function getCategories() {\r\n    const response = await axios.get('https://opentdb.com/api_category.php');\r\n    return response.data.trivia_categories;\r\n}\r\nexport default  getCategories ;","import \"./CategoryChoose.css\";\r\nfunction CategeryChoose(props)\r\n{\r\n    let cat1=props.cat1;\r\n    let cat2=props.cat2;\r\n    let cat3=props.cat3;\r\n    let id1=Number(props.cat1.id);\r\n    let id2=Number(props.cat2.id);\r\n    let id3=Number(props.cat3.id);\r\n    \r\n    return (<div className=\"categories\">\r\n        <a href={\"#/ques?cat=\"+id1+\"&type=1\"}> <p>Category 1 : {cat1.name} ${1*2000} (easy)</p> </a>\r\n        <a href={\"#/ques?cat=\"+id2+\"&type=2\"}> <p>Category 2 : {cat2.name} ${2*2000} (medium) </p> </a>\r\n        <a href={\"#/ques?cat=\"+id3+\"&type=3\"}> <p>Category 3 : {cat3.name} ${3*2000} (hard)</p> </a>\r\n    </div>)\r\n}\r\nexport default CategeryChoose;","import \"./Winner.css\";\r\nimport  { Link } from 'react-router-dom';\r\nimport  { useEffect } from 'react';\r\nfunction Winner(props)\r\n{\r\n    let arr=[];\r\n    let p=props.players;\r\n    for (let i=0;i<p.length;++i)\r\n    {\r\n        arr[i]=p[i].score; //Only numbers we want\r\n    }\r\n\r\n    let max=Math.max(...arr)\r\n    let index=arr.indexOf(max);\r\n    let w=p[index];\r\n    useEffect(() => { //play once once\r\n        var audio = new Audio(\"https://github.com/noamr200/trivia/raw/main/public/mp3/fanfare.mp3\");\r\n        audio.play();\r\n    },[]);\r\n\r\n    function Another()\r\n    {\r\n        props.reset();\r\n    }\r\n    \r\n    return (<div>\r\n            <div className=\"congratulations\" >\r\n            <p>Congratulations {w.name}!</p> \r\n           {/* <img src=\"/pics/trophy.jpg\" alt=\"Trophy\"/> */}\r\n           <img src=\"https://github.com/noamr200/trivia/raw/main/public/pics/trophy.jpg\" alt =\"Trophy\"/>\r\n            <p>{w.name} (Player {Number(index+1)}) You win the Game!  </p>\r\n            <p>With {w.score} points!</p> </div>\r\n            <Link to=\"/\" onClick={Another} className=\"btn btn-primary\">Let's Play another Game</Link>\r\n            </div>);\r\n}\r\nexport default Winner;","import \"./Game.css\";\r\n//import Button from 'react-bootstrap/Button';\r\nimport CategeryChoose from '../components/CategoryChoose';\r\nimport Winner from \"../components/Winner\";\r\nimport  { Redirect } from 'react-router-dom';\r\nfunction Game(props)\r\n{\r\n    const NO_QUESTION=-1;\r\n    const NUMBER_OF_CATEGORIES=23;\r\n    function RandomThree()\r\n    {\r\n        //Difficulty level makes questions impossible to be identical\r\n        let n1=NO_QUESTION,n2=NO_QUESTION,n3=NO_QUESTION;\r\n        n1=Math.floor(Math.random() * NUMBER_OF_CATEGORIES);\r\n        n2=Math.floor(Math.random() * NUMBER_OF_CATEGORIES);\r\n        n3=Math.floor(Math.random() * NUMBER_OF_CATEGORIES);\r\n        return [n1,n2,n3];\r\n    }\r\n\r\n    let CategoriesRandom=props.categories;\r\n    //let callback=props.callback; //DEBUG ONLY\r\n    let a=RandomThree();\r\n    let turn=props.turn;\r\n    let cat1=CategoriesRandom[a[0]];\r\n    let cat2=CategoriesRandom[a[1]];\r\n    let cat3=CategoriesRandom[a[2]];\r\n    \r\n    if (!props.turn) \r\n        turn=0;\r\n    \r\n    if (props.players[turn]===undefined) \r\n    {\r\n       return (<Redirect to='/' />);\r\n    }\r\n\r\n    //I know that i should not use <br> but using paragraph inside paragraph or div inside div gives me an error\r\n    \r\n    let category1=  <p className=\"choose\">\r\n        { props.players[turn].name+\" (Player\"+Number(turn+1)+\") It's your turn:\"}\r\n        <br/>Please Choose a category: </p> \r\n    const Categories=  <CategeryChoose  cat1={cat1}  cat2={cat2}  cat3={cat3}  />\r\n    const winner= <Winner players={props.players} reset={props.reset}/>\r\n    return (<div> \r\n      \r\n        {props.rounds!==0?category1:\"\"}\r\n        {props.rounds!==0?Categories:winner}\r\n       {/*  DEUBG ONLY\r\n       <Button variant=\"warning\" onClick={callback} >Switch Turn (dev only)</Button>*/}  \r\n       </div>)\r\n}\r\nexport default Game;","import axios from 'axios';\r\nasync function QuestionGetter(category,difficulty=\"medium\")\r\n{\r\n    // //https://opentdb.com/api.php?amount=1&category=16&difficulty=medium&type=multiple\r\n    const response = await axios.get('https://opentdb.com/api.php?amount=1&category='+category+'&difficulty='+difficulty+'&type=multiple');\r\n    return response;\r\n}\r\nexport default QuestionGetter;","import React, { useEffect } from 'react';\r\nimport \"./Answer.css\";\r\nfunction Answer(props)\r\n{\r\n    let text=props.currentAnswerText;\r\n    let index=props.currentAnswerIndex;\r\n    let right;\r\n   \r\n    if (props.res.includes(\"right\"))\r\n         right=true;\r\n    else \r\n         right=false;\r\n    \r\n    const answer= <span dangerouslySetInnerHTML={{__html:text}}></span> \r\n\r\n    useEffect(() => {\r\n    \r\n    var audio;\r\n    if (props.res.includes(\"right\")) \r\n    {\r\n        audio = new Audio(\"https://github.com/noamr200/trivia/raw/main/public/mp3/right.mp3\");\r\n        audio.play();\r\n        \r\n    }\r\n    else \r\n    {\r\n        audio = new Audio(\"https://github.com/noamr200/trivia/raw/main/public/mp3/wrong.mp3\");\r\n        audio.play();\r\n        \r\n        \r\n    }\r\n    },[props.res]);\r\n    const Right =<p className=\"a_res right\" >{props.res}</p>\r\n    const Wrong =<p className=\"a_res wrong\" >{props.res}</p>\r\n    \r\n    return (<div className=\"answering\"> \r\n                {right?Right:Wrong}\r\n                <p className=\"correct-answer\">Correct answer:{Number(index+1)}.{answer}</p>\r\n          </div>);\r\n}\r\nexport default Answer;","import { useState } from \"react\";\r\nimport Answer from \"./Answer\";\r\nimport \"./QuestionShow.css\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport React, { useEffect } from 'react';\r\nfunction QuestionShow(props)\r\n{\r\n    let p=props.ques[0];\r\n    let points=props.points;\r\n    let turn =props.turn;\r\n    const [showAnswer,SetShowAnswer]=useState(false); //Don't show the answer until the player answered\r\n    const [answersState,SetAnswerState]=useState([]);\r\n    const [AnswerIndex,SetAnswerIndex]=useState(-1);\r\n    const [res,SetRes]=useState(\"\");\r\n    function getRandomInt(max) \r\n    {\r\n        return Math.floor(Math.random() * Math.floor(max));\r\n    }\r\n   \r\n    useEffect(() => \r\n    {\r\n        \r\n        let correctIndex;\r\n        let answers=[];\r\n\r\n        correctIndex=getRandomInt(4);\r\n        answers=[];\r\n        answers[correctIndex]=p.correct_answer ; // DEBUG ONLY CHEAT LINE +\"--- Cheat --- this is  the correct answer\";\r\n        let j=0;\r\n        for (let i=0;i<4;++i)\r\n        {\r\n            if (i!==correctIndex) \r\n            {\r\n                answers[i]=p.incorrect_answers[j];\r\n                ++j\r\n        }\r\n        \r\n    }\r\n    SetAnswerState(answers);\r\n    SetAnswerIndex(correctIndex);\r\n      },[p.correct_answer,p.incorrect_answers]);\r\n\r\n  \r\n    function answer(e)\r\n    {\r\n        if (showAnswer) \r\n        {\r\n            return;\r\n        }\r\n        if ((Number(e-1))===AnswerIndex)\r\n        {\r\n            SetRes(\"You got it right! and you get \"+ points+\" points!\");\r\n            props.players[turn].score+=points;\r\n        }\r\n        else \r\n        {\r\n            SetRes(\"You were wrong! and you will lose \"+ points+\" points!\");\r\n            props.players[turn].score-=points;\r\n        }\r\n        SetShowAnswer(true);\r\n      \r\n    }\r\n   \r\n    //No spaces between <span> and </span>\r\n    const AnswerComponent=<div><Answer currentAnswerText={p.correct_answer} currentAnswerIndex={AnswerIndex}  res={res} /> </div>\r\n    const ContinueButton= <div> <a href=\"#/game\"> <Button variant=\"success\" onClick={props.callback} >Conitune Playing!</Button>  </a></div> \r\n    const AnswerRequest = <p className=\"ans1\"> {props.players[turn].name} (Player {Number(turn+1)}) answer the question</p>\r\n    const QuestinoShower = <div className=\"question\">\r\n    <p className=\"ques-txt\">   <span dangerouslySetInnerHTML={{__html:p.question}}></span>   </p>\r\n    \r\n       Answers:  \r\n       <p>\r\n           <Button className=\"my-btn\" variant=\"primary\" value=\"1\" onClick={() => answer(1)}>1.\r\n           <span dangerouslySetInnerHTML={{__html:answersState[0]}}></span>  \r\n           </Button> \r\n           \r\n       </p>\r\n       <p>\r\n           <Button className=\"my-btn\" variant=\"primary\" value=\"2\" onClick={() => answer(2)}>2.\r\n           <span dangerouslySetInnerHTML={{__html:answersState[1]}}></span> \r\n           </Button>\r\n          \r\n       </p> \r\n       <p>\r\n           <Button  className=\"my-btn\" variant=\"primary\" value=\"3\" onClick={() => answer(3)}>3.\r\n           <span dangerouslySetInnerHTML={{__html:answersState[2]}}></span> \r\n           </Button>\r\n          \r\n       </p>\r\n       <p>\r\n           <Button className=\"my-btn\" variant=\"primary\" value=\"4\" onClick={() => answer(4)}>4.\r\n           <span dangerouslySetInnerHTML={{__html:answersState[3]}}></span> \r\n           </Button>\r\n          \r\n       </p> </div>\r\n\r\n  return (<div> \r\n        {!showAnswer ?  AnswerRequest: \"\"}\r\n        {!showAnswer ?  QuestinoShower: \"\"}\r\n        {showAnswer ?  AnswerComponent :\"\"} \r\n        {showAnswer ?  ContinueButton :\"\" }\r\n    </div>)\r\n}\r\nexport default QuestionShow;","//import Button from 'react-bootstrap/Button';\r\nimport { useLocation } from 'react-router-dom';\r\nimport React, { useEffect, useState } from 'react';\r\nimport QuestionGetter from \"../models/QuestionGetter\";\r\nimport QuestionShow from \"./QuestionShow\";\r\nfunction Question(props)\r\n{\r\n    //https://opentdb.com/api.php?amount=1&category=16&difficulty=medium&type=multiple\r\n    const [ques,SetQues]=useState(null);\r\n    const location = useLocation();\r\n    let difficulty=\"medium\";\r\n    let catNum=location.search.charAt(5)+location.search.charAt(6);\r\n    let points=location.search.charAt(location.search.length-1)*2000;\r\n    if (points===2000) \r\n    {\r\n        difficulty=\"easy\";\r\n    }\r\n    else if (points===4000)\r\n    {\r\n        difficulty=\"medium\";\r\n    }\r\n    else //hard \r\n    {\r\n        difficulty=\"hard\";\r\n    }\r\n    useEffect(() => {\r\n            QuestionGetter(catNum,difficulty).then (response=> { \r\n            SetQues(response.data.results);\r\n        }, );\r\n    },[catNum,difficulty]);\r\n    const wait=<div className=\"spinner-border\" role=\"status\">\r\n    <span className=\"sr-only\">Loading...</span> </div>\r\n    const cond=<QuestionShow ques={ques} points={points} turn={props.turn} players={props.players} callback={props.callback}  />;\r\n    return (<div>  {ques!=null? cond:wait} \r\n    {/* DEBUG PURPOSES ONLY (dev only line)\r\n    <a href=\"#/game\"> <Button variant=\"warning\" onClick={props.callback} >Switch Turn (dev only)</Button>  </a>*/}\r\n     </div>);\r\n}\r\nexport default Question;","import './App.css';\nimport PlayersSetter from \"./components/PlayersSetter\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport getCategories from \"./models/CategoroiesGetter\";\nimport Game from \"./pages/Game\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react';\nimport Question from './components/Question';\nfunction App(props) {\n  const [players,SetPlayers] =useState([]);\n  const [counter,SetCounter] =useState(1);\n  const [turn,SetTurn]=useState(0); //Turn is the index (starts with 0)\n  const [categories,SetCategories]=useState([]);\n  const [rounds,SetRounds]=useState(0); //0 means game over\n  useEffect(() => {\n    getCategories().then (response=> { \n      SetCategories(response);\n  }, );\n  },[]);\n  \n  \n \n  let PlayersList = players.map ((item,index) =>\n  {\n      return (<div key={index} > {item.name} (Player {item.number})  has  {item.score} Points </div> );\n  });\n   \n  function setNumberOfRounds(e)\n  {\n    let roundall=e*counter;\n    SetRounds(roundall);\n  }\n\n  function SwitchTurn(e)\n  {\n    if (turn>=counter-2)  \n    {\n      SetTurn(0);\n    }\n    else\n    {\n      SetTurn( (turn+1));\n    }\n\n    if (rounds-1===0 && counter>1) \n    {\n      checkIdenticalPoints();\n    }\n    else \n    {\n      SetRounds(rounds-1);\n    }\n\n  }\n\n  function checkIdenticalPoints()\n  {\n    let arr=[];\n    for (let i=0;i<players.length;++i)\n    {\n      arr[i]=players[i].score; //we want numbers only\n    }\n    let max=Math.max(...arr)\n    if (countIndex(arr,max) >1)  //We have two or more players with identical points\n    {\n     \n      SetRounds(Number(5*Number(counter-1)));\n    }\n    else \n    {\n      SetRounds(0);\n    }\n\n  }\n\n  function countIndex(array, element) \n  {\n    // returns the second index of a symbol in a given text\n    var count = 0;\n    for (let i = 0; i < array.length; ++i) \n    {\n      \n        if (array[i] === element) \n        {\n            ++count;\n        }\n       \n    }   \n    return count;\n}    \n\n\n  function reset()\n  {\n    SetPlayers([]);\n    SetCounter(1);\n    SetTurn(0);\n    SetRounds(0);\n    \n  }\n  function check(e)\n  {\n    SetPlayers(players.concat(e));\n    SetCounter(counter+1);\n  }\n \n  return (\n    <div className=\"App\">\n      <div className=\"info\">  {PlayersList} </div>\n      <header className=\"App-header\">\n      \n<HashRouter>\n\n<Route exact path=\"/\" >  <PlayersSetter callback={check} RoundsCallback={setNumberOfRounds} players={players} counter={counter} /></Route>\n<Route exact path=\"/game\" >  <Game  players={players} turn={turn} callback={SwitchTurn} reset={reset} categories={categories} rounds={rounds} /></Route>\n<Route exact path=\"/ques\" > <Question players={players} turn={turn} callback={SwitchTurn}  /> </Route>\n</HashRouter>\n\n   \n    {/*<p>{rounds} Rounds Left</p> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}